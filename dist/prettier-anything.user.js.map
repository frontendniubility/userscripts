{"version":3,"file":"prettier-anything.user.js","mappings":"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","sources":["webpack://userscripts/./src/prettier-anything/prettier-anything.user.js"],"sourcesContent":["// ==UserScript==\r\n// @name         Prettier Anything\r\n// @namespace    prettier-anything\r\n// @author       fuzetsu\r\n// @version      0.1.4\r\n// @description  Apply prettier formatting to any text input\r\n// @match        *://*/*\r\n// @inject-into  content\r\n// @grant        GM_setClipboard\r\n// @grant        GM_xmlhttpRequest\r\n// @grant        GM_getValue\r\n// @grant        GM_setValue\r\n// @grant        GM_registerMenuCommand\r\n// @require      https://cdn.jsdelivr.net/gh/kufii/My-UserScripts@00302ac8bd875599ed97df07b379b58f9b4932bd/libs/gm_config.js\r\n// ==/UserScript==\r\n\r\n\r\n'use strict'\r\n\r\nconst deps = [\r\n  'https://unpkg.com/prettier@2/standalone.js',\r\n  'https://unpkg.com/prettier@2/parser-babel.js'\r\n]\r\n\r\nconst loadDep = url =>\r\n  new Promise((resolve, reject) => {\r\n    GM_xmlhttpRequest({\r\n      method: 'GET',\r\n      url,\r\n      onload: res => resolve(res.responseText),\r\n      onerror: () => reject(new Error(`Failed to load ${url}`))\r\n    })\r\n  })\r\n\r\nconst Config = GM_config([\r\n  {\r\n    key: 'prettierrc',\r\n    label: 'Prettier Config',\r\n    default: '{}',\r\n    type: 'text',\r\n    multiline: true,\r\n    resizable: true\r\n  },\r\n  {\r\n    key: 'binding',\r\n    label: 'Key Binding',\r\n    type: 'keybinding',\r\n    default: { altKey: true, shiftKey: true, key: 'I' },\r\n    requireModifier: true,\r\n    requireKey: true\r\n  },\r\n  {\r\n    key: 'copyBinding',\r\n    label: 'Copy Key Binding',\r\n    type: 'keybinding',\r\n    default: { ctrlKey: true, altKey: true, shiftKey: true, key: 'I' },\r\n    requireModifier: true,\r\n    requireKey: true\r\n  }\r\n])\r\nGM_registerMenuCommand('Prettier Anywhere Settings', () => {\r\n  if (window.top === window.self) Config.setup()\r\n})\r\nlet config = Config.load()\r\nConfig.onsave = cfg => (config = cfg)\r\n\r\nconst p = (...args) => (console.log(...args), args[0])\r\n\r\nlet loaded = false\r\nconst load = () => {\r\n  if (loaded) return\r\n  loaded = true\r\n  return Promise.all(deps.map(loadDep)).then(scripts => scripts.map(eval)) // eslint-disable-line no-eval\r\n}\r\n\r\nconst getSelection = () => {\r\n  const elem = document.activeElement\r\n  if (['INPUT', 'TEXTAREA'].includes(elem.nodeName)) {\r\n    return elem.value.slice(elem.selectionStart, elem.selectionEnd)\r\n  } else if (elem.contentEditable) {\r\n    if (!document.getSelection().toString()) return\r\n    document.execCommand('copy')\r\n    return navigator.clipboard.readText()\r\n  } else return document.getSelection().toString()\r\n}\r\n\r\nconst insertText = text => {\r\n  const elem = document.activeElement\r\n  if (typeof InstallTrigger !== 'undefined' && ['INPUT', 'TEXTAREA'].includes(elem.nodeName)) {\r\n    elem.value =\r\n      elem.value.slice(0, elem.selectionStart) + text + elem.value.slice(elem.selectionEnd)\r\n  } else {\r\n    document.execCommand('insertText', false, text)\r\n  }\r\n}\r\n\r\nconst prettify = async clip => {\r\n  const code = getSelection()\r\n  p('key combo HIT, selection = ', code, '; clip = ', clip)\r\n  if (!code) return p('no selection, so nothing to do')\r\n  p('--- PRETTIER START ---')\r\n\r\n  p('Loading Prettier')\r\n  const loadStart = Date.now()\r\n  await load()\r\n  p('Loaded, delta = ', Date.now() - loadStart)\r\n\r\n  const conf = {\r\n    ...JSON.parse(config.prettierrc || '{}'),\r\n    parser: 'babel',\r\n    plugins: prettierPlugins\r\n  }\r\n  p('formatting using conf:', conf)\r\n\r\n  const formatted = prettier.format(code, conf)\r\n  if (clip) GM_setClipboard(formatted)\r\n  else insertText(formatted)\r\n\r\n  document.getSelection().empty()\r\n\r\n  p('BEFORE:\\n', code)\r\n  p('AFTER:\\n', formatted)\r\n  p('--- PRETTIER END ---')\r\n}\r\n\r\nconst keyBindingsMatch = (a, b) =>\r\n  !a.ctrlKey === !b.ctrlKey &&\r\n  !a.altKey === !b.altKey &&\r\n  !a.shiftKey === !b.shiftKey &&\r\n  !a.metaKey === !b.metaKey &&\r\n  a.key.toUpperCase() === b.key.toUpperCase()\r\n\r\nwindow.addEventListener('keydown', e => {\r\n  if (keyBindingsMatch(e, config.binding)) {\r\n    e.preventDefault()\r\n    prettify()\r\n  } else if (keyBindingsMatch(e, config.copyBinding)) {\r\n    e.preventDefault()\r\n    prettify(true)\r\n  }\r\n})\r\n"],"names":["deps","loadDep","url","Promise","resolve","reject","GM_xmlhttpRequest","method","onload","res","responseText","onerror","Error","Config","GM_config","key","label","default","type","multiline","resizable","altKey","shiftKey","requireModifier","requireKey","ctrlKey","GM_registerMenuCommand","window","top","self","setup","config","load","onsave","cfg","p","console","log","loaded","all","map","then","scripts","eval","getSelection","elem","document","activeElement","includes","nodeName","value","slice","selectionStart","selectionEnd","contentEditable","toString","execCommand","navigator","clipboard","readText","insertText","text","InstallTrigger","prettify","clip","code","loadStart","Date","now","conf","JSON","parse","prettierrc","parser","plugins","prettierPlugins","formatted","prettier","format","GM_setClipboard","empty","keyBindingsMatch","a","b","metaKey","toUpperCase","addEventListener","e","binding","preventDefault","copyBinding"],"sourceRoot":""}