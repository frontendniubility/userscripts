{"version":3,"file":"crunchyroll-video-utilties.user.js","mappings":"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","sources":["webpack://userscripts/./src/crunchyroll-video-utilities/crunchyroll-video-utilties.user.js"],"sourcesContent":["// ==UserScript==\r\n// @name Crunchyroll Video Utilities\r\n// @version 1.0.5\r\n// @namespace fuzetsu/csdvqn\r\n// @description seek video with hotkeys and set default quality\r\n// @match https://static.crunchyroll.com/*/player.html\r\n// @match https://www.crunchyroll.com/*\r\n// @grant GM_registerMenuCommand\r\n// @grant GM_getValue\r\n// @grant GM_setValue\r\n// @require https://gitcdn.xyz/cdn/fuzetsu/userscripts/b38eabf72c20fa3cf7da84ecd2cefe0d4a2116be/wait-for-elements/wait-for-elements.js\r\n// @require https://gitcdn.xyz/cdn/kufii/My-UserScripts/fa4555701cf5a22eae44f06d9848df6966788fa8/libs/gm_config.js\r\n// ==/UserScript==\r\n\r\nconst sep = '~~@~~'\r\nconst domain = 'https://www.crunchyroll.com'\r\nconst CSS = {\r\n  quality: '.qualityMenuItemSelector',\r\n  settings: '.settingsMenuButton,#settingsControl',\r\n  playerBox: '#showmedia_video_player'\r\n}\r\n\r\n// use publicly exposed Player.js object to control video player\r\nconst vilosPlayer = () => unsafeWindow.VILOS_PLAYERJS\r\n\r\nconst qq = (q, c) => Array.from((c || document).querySelectorAll(q))\r\nconst q = (q, c) => (c || document).querySelector(q)\r\n\r\nconst config = GM_config([\r\n  {\r\n    key: 'quality',\r\n    label: 'Quality',\r\n    type: 'dropdown',\r\n    values: ['auto', 360, 480, 720, 1080],\r\n    default: 'auto'\r\n  }\r\n])\r\n\r\nlet cfg = config.load()\r\n\r\nconfig.onsave = newCfg => {\r\n  cfg = newCfg\r\n  player.setQuality(cfg.quality)\r\n}\r\n\r\nconst p = (...args) => (console.log(...args), args[0])\r\n\r\nlet isFullscreen = false\r\n\r\nconst player = {\r\n  setQuality: quality => {\r\n    const btn =\r\n      quality !== 'auto'\r\n        ? qq(CSS.quality)\r\n            .slice(2)\r\n            .find(item => quality >= parseInt(item.textContent))\r\n        : qq(CSS.quality)[2]\r\n    if (btn) {\r\n      // this causes the menu to open\r\n      btn.click()\r\n      // so close it after a short delay\r\n      setTimeout(player.toggleSettings, 200, false)\r\n    }\r\n  },\r\n  fillTab: () => {\r\n    const playerBox = q(CSS.playerBox)\r\n    if (!playerBox) return p('playerbox not found')\r\n    isFullscreen = !isFullscreen\r\n    if (!isFullscreen) return playerBox.removeAttribute('style')\r\n    Object.assign(playerBox.style, {\r\n      position: 'fixed',\r\n      zIndex: 1000,\r\n      top: 0,\r\n      bottom: 0,\r\n      left: 0,\r\n      right: 0,\r\n      width: '100%',\r\n      height: '100%'\r\n    })\r\n  },\r\n  nextEp: (back = false) =>\r\n    q('.collection-carousel-media-link-current')\r\n      .parentElement[back ? 'previousElementSibling' : 'nextElementSibling'].querySelector('a')\r\n      .click(),\r\n  prevEp: () => player.nextEp(true),\r\n  skip: sec => vilosPlayer().getCurrentTime(curTime => vilosPlayer().setCurrentTime(curTime + sec)),\r\n  volumeUp: (val = 10) => vilosPlayer().getVolume(curVol => vilosPlayer().setVolume(curVol + val)),\r\n  volumeDown: (val = -10) => player.volumeUp(val),\r\n  toggleSettings: makeVisible => {\r\n    const btn = q(CSS.settings)\r\n    if (typeof makeVisible === 'boolean') {\r\n      const isVisible = p(!!btn.offSetParent, '=== isVisible')\r\n      if (makeVisible === isVisible) return\r\n    }\r\n    btn.click()\r\n  }\r\n}\r\n\r\nconst seekKeys = {\r\n  l: 85,\r\n  b: -85,\r\n  '}': 30,\r\n  '{': -30,\r\n  ']': 15,\r\n  '[': -15\r\n}\r\n\r\nconst handleKey = key =>\r\n  key === 'n'\r\n    ? player.nextEp()\r\n    : key === 'p'\r\n    ? player.prevEp()\r\n    : key === 'j'\r\n    ? player.volumeDown()\r\n    : key === 'k'\r\n    ? player.volumeUp()\r\n    : key === 'w'\r\n    ? player.fillTab()\r\n    : key in seekKeys\r\n    ? player.skip(seekKeys[key])\r\n    : null\r\n\r\nconst isPlayerFrame = location.href.includes('static.crunchyroll.com')\r\n\r\n/**\r\n * Keyboard events from within the player frame dont bubble up to main page where the player.js\r\n * object and the video links live, so use postMessage to send the keypresses there\r\n **/\r\nconst pass = ['INPUT', 'TEXTAREA', 'SELECT']\r\nwindow.addEventListener(\r\n  'keydown',\r\n  isPlayerFrame\r\n    ? e => window.parent.postMessage(sep + e.key, domain)\r\n    : e => pass.includes(document.activeElement.nodeName) || handleKey(e.key)\r\n)\r\n\r\nif (isPlayerFrame) {\r\n  // can only set quality from the player frame since the button is in its dom\r\n  waitForElems({\r\n    stop: true,\r\n    sel: CSS.quality + '.selected',\r\n    onmatch: elem => {\r\n      if (elem.textContent.toLowerCase().includes(cfg.quality))\r\n        return p('configured default already selected')\r\n      player.setQuality(cfg.quality)\r\n    }\r\n  })\r\n} else {\r\n  // handle forwarded keyboard from player frame\r\n  window.addEventListener(\r\n    'message',\r\n    ({ data }) => data.startsWith(sep) && handleKey(data.slice(sep.length))\r\n  )\r\n}\r\n\r\nGM_registerMenuCommand('Crunchyroll Video Utilities - Config', config.setup)\r\n"],"names":["sep","domain","CSS","quality","settings","playerBox","vilosPlayer","unsafeWindow","VILOS_PLAYERJS","qq","q","c","Array","from","document","querySelectorAll","querySelector","config","GM_config","key","label","type","values","default","cfg","load","onsave","newCfg","player","setQuality","p","_console","console","log","apply","arguments","length","undefined","isFullscreen","btn","slice","find","item","parseInt","textContent","click","setTimeout","toggleSettings","fillTab","removeAttribute","Object","assign","style","position","zIndex","top","bottom","left","right","width","height","nextEp","back","parentElement","prevEp","skip","sec","getCurrentTime","curTime","setCurrentTime","volumeUp","val","getVolume","curVol","setVolume","volumeDown","makeVisible","isVisible","offSetParent","seekKeys","l","b","handleKey","isPlayerFrame","location","href","includes","pass","window","addEventListener","e","parent","postMessage","activeElement","nodeName","waitForElems","stop","sel","onmatch","elem","toLowerCase","_ref","data","startsWith","GM_registerMenuCommand","setup"],"sourceRoot":""}