{"version":3,"file":"youtube-playlist-time.user.js","mappings":";;IASA,IAEIA,cAAc,yBACdC,kBAAkB,UAClBC,qBAAqB,wEACrBC,QAAQ,iBACRC,UAAU,uBACVC,WAAW,0DAEXC,OAAO;QACTC,KAAK,SAAAA;YACH,IAAIC,OAAO,GAAGC,MAAMC,KAAKC;YACzBH,KAAKI,QAAQ,OAAOZ,cAAc,KAAK;YACvCa,QAAQN,IAAIO,MAAMD,SAASL;AAC7B;QACAO,GAAG,SAAAA,EAASC,OAAOC;YACjB,QAAQA,WAAWC,UAAUC,cAAcH;AAC7C;QACAI,IAAI,SAAAA,GAASJ,OAAOC;YAClB,OAAO,GAAGR,MAAMC,MAAMO,WAAWC,UAAUG,iBAAiBL;AAC9D;QACAM,SAAS,SAAAA,QAASC,QAAQC;YACxBA,OAAOC,SAAQ,SAASC;gBACtBH,OAAOI,iBAAiBD,IAAI,IAAIA,IAAI;AACtC;AACF;QACAE,WAAW,SAAAA,UAASL,QAAQC;YAC1BA,OAAOC,SAAQ,SAASC;gBACtBH,OAAOM,oBAAoBH,IAAI,IAAIA,IAAI;AACzC;AACF;QACAI,UAAU,SAAAA,SAASC,UAAUC;YAC3B,IAAIC,OAAO;YACX,OAAO;gBACL,KAAKA,MAAM;oBACTF,SAASjB,MAAMoB,MAAMvB;oBACrBsB,OAAO;oBACPE,YAAW;wBACTF,OAAO;AACT,wBAAGD;AACL;AACF;AACF;OAIEI,iBAAiB,SAAAA,eAASC;QAC5B,OAAOA,IAAIC,MAAM,KAAKC,UAAUC,QAAO,SAASC,MAAMC,KAAKC;YACzDD,MAAME,SAASF,KAAK;YACpB,QAAOC;cACL,KAAK;gBACH,OAAOF,OAAOC;;cAChB,KAAK;gBACH,OAAOD,OAAOC,MAAM;;cACtB,KAAK;gBACH,OAAOD,OAAOC,MAAM,KAAK;;cAC3B;gBACE,OAAO;;AAEb,YAAG;AACL,OAGIG,UAAU,SAAAA,QAASC;QACrB,QAAQ,MAAMA,MAAMrC,OAAO;AAC7B,OAGIsC,UAAU,SAAAA,QAASC;QAAS,IAC1BC,MAAMC,cACNC,QAAQC,KAAKC,MAAML,UAAU,KAAK;QACtCA,UAAUA,WAAW,KAAK;QAC1B,IAAIM,UAAUF,KAAKC,MAAML,UAAU;QACnCA,UAAUA,UAAU;QACpBC,IAAIM,eAAeJ,SAAS,OAAOA,QAAQ,eAAeG,WAAW,OAAOA,UAAU,iBAAiBN,WAAW,OAAOA,UAAU,aAAaQ;AAClJ,OAEIN,aAAa,SAAAA;QACf,IAAID,MAAM3C,KAAKS,EAAE,MAAMZ;QACvB,KAAI8C,KAAK;YACPA,MAAM3C,KAAKS,EAAEd,iBAAiBwD,YAAYvC,SAASwC,cAActD;YACjE6C,IAAIU,KAAKxD;YACT8C,IAAIW,YAAYvD;AAClB;QACA,OAAO4C;AACT,OAEIY,gBAAgB,SAAAA;QAClB,SAASvD,KAAKS,EAAE,MAAMZ;AACxB,OAEI2D,aAAa,GACbC,gBAAgB,SAAAA,cAASC;QAC3B,IAAIC,aAAa3D,KAAKc,GAAGlB;QACzB,KAAI8D,SAASC,WAAWC,WAAWJ,cAAcD,iBAAiB;QAClEC,aAAaG,WAAWC;QACxB,IAAIC,eAAeF,WAAWzB,QAAO,SAAS4B,OAAOC;YACnD,OAAOD,QAAQhC,eAAeiC,GAAGC,YAAYd;AAC/C,YAAG;QACHT,QAAQoB;AACV,OAEI3C,SAAS,EACX,EAAC,aAAalB,KAAKwB,SAASiC,cAAcQ,KAAK,MAAM,QAAQ;IAG/DjE,KAAKC,IAAI;IAETiE,WAAW,oDAAmD;QAAW,IACnEC,cAAcC,SAASC,MACvBC,WAAWC,KACX7B,UAAU;QACd1C,KAAKC,IAAI;QACTuE,aAAa;YACXC,KAAK9E;YACL+E,MAAM;YACNC,SAAS,SAAAA,QAASC;gBAChBC,aAAaN;gBACbvE,KAAKC,IAAI;gBACTsE,MAAM1C,YAAW;oBACf7B,KAAKgB,QAAQ8D,QAAQ5D;oBACrBuC,cAAc;oBACba,YAAYJ,YAAW,SAASa;wBAC9B,OAAOA,QAAQZ;AACjB,yBAAG;wBACDnE,KAAKC,IAAI;wBACTD,KAAKsB,UAAUwD,QAAQ5D;wBACvB,IAAIyB,MAAMC;wBACV,IAAGD,KAAKA,IAAIqC;AACd,wBAAG;AACN,oBAAG;AACL;;AAEJ","sources":["webpack://userscripts/./src/youtube-playlist-time/youtube-playlist-time.user.js"],"sourcesContent":["// ==UserScript==\r\n// @name         YouTube Playlist Time\r\n// @namespace    http://www.fuzetsu.com/WLFT\r\n// @version      1.2.11\r\n// @description  Shows the total time it would take to watch all the videos in a YouTube playlist\r\n// @match        https://www.youtube.com/*\r\n// @require      https://greasyfork.org/scripts/5679-wait-for-elements/code/Wait%20For%20Elements.js?version=147465\r\n// @copyright    2014+, fuzetsu\r\n// @grant        none\r\n// ==/UserScript==\r\n\r\nvar SCRIPT_NAME = 'YouTube Playlist Time';\r\nvar HOLDER_SELECTOR = '#stats';\r\nvar TIMESTAMP_SELECTOR = 'ytd-browse:not([hidden]) .ytd-thumbnail-overlay-time-status-renderer';\r\nvar EL_ID = 'us-total-time';\r\nvar EL_TYPE = 'yt-formatted-string';\r\nvar EL_CLASS = 'style-scope ytd-playlist-sidebar-primary-info-renderer';\r\n\r\nvar util = {\r\n  log: function () {\r\n    var args = [].slice.call(arguments);\r\n    args.unshift('%c' + SCRIPT_NAME + ':', 'font-weight: bold;color: #233c7b;');\r\n    console.log.apply(console, args);\r\n  },\r\n  q: function(query, context) {\r\n    return (context || document).querySelector(query);\r\n  },\r\n  qq: function(query, context) {\r\n    return [].slice.call((context || document).querySelectorAll(query));\r\n  },\r\n  bindEvt: function(target, events) {\r\n    events.forEach(function(evt) {\r\n      target.addEventListener(evt[0], evt[1]);\r\n    });\r\n  },\r\n  unbindEvt: function(target, events) {\r\n    events.forEach(function(evt) {\r\n      target.removeEventListener(evt[0], evt[1]);\r\n    });\r\n  },\r\n  throttle: function(callback, limit) {\r\n    var wait = false;\r\n    return function() {\r\n      if (!wait) {\r\n        callback.apply(this, arguments);\r\n        wait = true;\r\n        setTimeout(function() {\r\n          wait = false;\r\n        }, limit);\r\n      }\r\n    };\r\n  }\r\n};\r\n\r\n// converts a timestring to seconds\r\nvar calcTimeString = function(str) {\r\n  return str.split(':').reverse().reduce(function(last, cur, idx) {\r\n    cur = parseInt(cur, 10);\r\n    switch(idx) {\r\n      case 0: // seconds\r\n        return last + cur;\r\n      case 1: // minutes\r\n        return last + cur * 60;\r\n      case 2: // hours\r\n        return last + cur * 60 * 60;\r\n      default:\r\n        return 0;\r\n    }\r\n  }, 0);\r\n};\r\n\r\n// pads an integer with zeroes\r\nvar padTime = function(time) {\r\n  return (\"0\" + time).slice(-2);\r\n};\r\n\r\n// calculates the total amount of time necessary to watch all the videos in the playlist and outputs the result\r\nvar setTime = function(seconds) {\r\n  var loc = getTimeLoc();\r\n  var hours = Math.floor(seconds / 60 / 60);\r\n  seconds = seconds % (60 * 60);\r\n  var minutes = Math.floor(seconds / 60);\r\n  seconds = seconds % 60;\r\n  loc.innerHTML = (((hours || '') && hours + ' hours ') + ((minutes || '') && minutes + ' minutes ') + ((seconds || '') && seconds + ' seconds')).trim();\r\n};\r\n\r\nvar getTimeLoc = function() {\r\n  var loc = util.q('#' + EL_ID);\r\n  if(!loc) {\r\n    loc = util.q(HOLDER_SELECTOR).appendChild(document.createElement(EL_TYPE));\r\n    loc.id = EL_ID;\r\n    loc.className = EL_CLASS;\r\n  }\r\n  return loc;\r\n};\r\n\r\nvar timeLocExists = function() {\r\n  return !!util.q('#' + EL_ID);\r\n};\r\n\r\nvar lastLength = 0;\r\nvar calcTotalTime = function(force) {\r\n  var timestamps = util.qq(TIMESTAMP_SELECTOR);\r\n  if(!force && timestamps.length === lastLength && timeLocExists()) return;\r\n  lastLength = timestamps.length;\r\n  var totalSeconds = timestamps.reduce(function(total, ts) {\r\n    return total + calcTimeString(ts.textContent.trim());\r\n  }, 0);\r\n  setTime(totalSeconds);\r\n};\r\n\r\nvar events = [\r\n  ['mousemove', util.throttle(calcTotalTime.bind(null, false), 500)]\r\n];\r\n\r\nutil.log('Started, waiting for playlist');\r\n\r\nwaitForUrl(/^https:\\/\\/www\\.youtube\\.com\\/playlist\\?list=.+/, function() {\r\n  var playlistUrl = location.href;\r\n  var urlWaitId, oid;\r\n  var seconds = 0;\r\n  util.log('Reached playlist, waiting for display area to load');\r\n  waitForElems({\r\n    sel: HOLDER_SELECTOR,\r\n    stop: true,\r\n    onmatch: function(holder) {\r\n      clearTimeout(oid);\r\n      util.log('display area loaded, calculating time.');\r\n      oid = setTimeout(function() {\r\n        util.bindEvt(window, events);\r\n        calcTotalTime(true);\r\n         urlWaitId = waitForUrl(function(url) {\r\n           return url !== playlistUrl;\r\n         }, function() {\r\n           util.log('Leaving playlist, removing listeners');\r\n           util.unbindEvt(window, events);\r\n           var loc = getTimeLoc();\r\n           if(loc) loc.remove();\r\n         }, true);\r\n      }, 500);\r\n    }\r\n  });\r\n});\r\n"],"names":["SCRIPT_NAME","HOLDER_SELECTOR","TIMESTAMP_SELECTOR","EL_ID","EL_TYPE","EL_CLASS","util","log","args","slice","call","arguments","unshift","console","apply","q","query","context","document","querySelector","qq","querySelectorAll","bindEvt","target","events","forEach","evt","addEventListener","unbindEvt","removeEventListener","throttle","callback","limit","wait","this","setTimeout","calcTimeString","str","split","reverse","reduce","last","cur","idx","parseInt","padTime","time","setTime","seconds","loc","getTimeLoc","hours","Math","floor","minutes","innerHTML","trim","appendChild","createElement","id","className","timeLocExists","lastLength","calcTotalTime","force","timestamps","length","totalSeconds","total","ts","textContent","bind","waitForUrl","playlistUrl","location","href","urlWaitId","oid","waitForElems","sel","stop","onmatch","holder","clearTimeout","window","url","remove"],"sourceRoot":""}