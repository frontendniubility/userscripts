{"version":3,"file":"crunchyroll-queue-times.user.js","mappings":"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","sources":["webpack://userscripts/./src/crunchyroll-queue-times/crunchyroll-queue-times.user.js"],"sourcesContent":["// ==UserScript==\r\n// @name        Crunchyroll Queue Real Times\r\n// @namespace   http://www.fuzetsu.com/CRRT\r\n// @version     1.0.4\r\n// @description Display countdown until next episode in the Crunchyroll Queue page\r\n// @match       http://www.crunchyroll.com/home/queue\r\n// @copyright   2014+, fuzetsu\r\n// @deprecated  true\r\n// ==/UserScript==\r\n\r\nvar PREMIUM = 'rgb(255, 251, 223)',\r\n  REGULAR = 'rgb(232, 244, 248)',\r\n  COMING_SOON_IMG = 'http://static.ak.crunchyroll.com/i/coming_soon_beta_wide.jpg';\r\n\r\nvar SECOND = 1000,\r\n  MINUTE = SECOND * 60,\r\n  HOUR = MINUTE * 60,\r\n  DAY = HOUR * 24;\r\n\r\nvar CURYEAR = (new Date()).getFullYear();\r\n\r\nvar qq = function(q, c) {\r\n  return [].slice.call((c || document).querySelectorAll(q));\r\n};\r\n\r\nvar storeGet = function(key) {\r\n  if (typeof GM_getValue === \"undefined\") {\r\n    var value = localStorage.getItem(key);\r\n    if (value === \"true\" || value === \"false\") {\r\n      return (value === \"true\") ? true : false;\r\n    }\r\n    return value;\r\n  }\r\n  return GM_getValue(key);\r\n};\r\n\r\nvar storeSet = function(key, value) {\r\n  if (typeof GM_setValue === \"undefined\") {\r\n    return localStorage.setItem(key, value);\r\n  }\r\n  return GM_setValue(key, value);\r\n};\r\n\r\nvar storeDel = function(key) {\r\n  if (typeof GM_deleteValue === \"undefined\") {\r\n    return localStorage.removeItem(key);\r\n  }\r\n  return GM_deleteValue(key);\r\n};\r\n\r\nvar findEpByTitle = function(shows, title) {\r\n  var found;\r\n  shows.some(function(show) {\r\n    if (show.name.indexOf(title) === 0) {\r\n      found = show;\r\n      return true;\r\n    }\r\n  });\r\n  return found;\r\n};\r\n\r\nvar getTimes = function(total) {\r\n  var days = Math.floor(total / DAY);\r\n  total -= days * DAY;\r\n  var hours = Math.floor(total / HOUR);\r\n  total -= hours * HOUR;\r\n  var minutes = Math.floor(total / MINUTE);\r\n  total -= minutes * MINUTE;\r\n  var seconds = Math.floor(total / SECOND);\r\n  total -= seconds * SECOND;\r\n  return {\r\n    days: days,\r\n    hours: hours,\r\n    minutes: minutes,\r\n    seconds: seconds,\r\n    isDone: function() {\r\n      return days <= 0 && hours <= 0 && minutes <= 0 && seconds <= 0;\r\n    },\r\n    toTimeStr: function() {\r\n      return (this.days > 0 ? this.days + ' days ' : '') + (this.hours > 0 ? this.hours + ' hours ' : '') + (this.minutes > 0 ? this.minutes + ' minutes ' : '') + this.seconds + ' seconds';\r\n    }\r\n  };\r\n};\r\n\r\n// inserts a countdown to the release\r\nvar insertCountDown = function(loc, ep) {\r\n  var countDown = document.createElement('span');\r\n  var last = Date.now();\r\n  var totalTime = ep.date.valueOf() - last;\r\n  var tick = setInterval(function() {\r\n    var times = getTimes(totalTime);\r\n    if (times.isDone()) {\r\n      countDown.innerHTML = '<strong>A new episode has been released! Refresh the page to see it.</strong>';\r\n      return clearInterval(tick);\r\n    }\r\n    countDown.textContent = times.toTimeStr();\r\n    totalTime -= Date.now() - last;\r\n    last = Date.now();\r\n  }, 1000);\r\n  loc.innerHTML = '';\r\n  loc.appendChild(countDown);\r\n};\r\n\r\nvar extractDataFromScript = function(text) {\r\n  var obj = JSON.parse(text.slice(text.indexOf('{'), text.lastIndexOf('}') + 1));\r\n  var dateStr = text.slice(text.lastIndexOf('}') + 4, text.lastIndexOf('\"'));\r\n  obj.date = new Date(dateStr.slice(0, -1) + \" \" + (dateStr.slice(-1) === 'a' ? 'am' : 'pm') + ' ' + CURYEAR);\r\n  return obj;\r\n};\r\n\r\nvar getLaunchCalendar = function(cb) {\r\n  var xhr = new XMLHttpRequest();\r\n  xhr.open('get', '/launchcalendar', true);\r\n  xhr.responseType = 'document';\r\n  xhr.onload = cb;\r\n  xhr.send();\r\n};\r\n\r\nvar main = function(userColor) {\r\n  console.log(userColor);\r\n  getLaunchCalendar(function(evt) {\r\n    var xhr = evt.target;\r\n    var animeData = [];\r\n    qq('td > div > script', xhr.response).forEach(function(script) {\r\n      if (script.previousSibling.previousSibling.style.backgroundColor !== userColor) return;\r\n      animeData.push(extractDataFromScript(script.textContent.trim()));\r\n    });\r\n    // find first date that is before now\r\n    var now = Date.now();\r\n    animeData = animeData.filter(function(anime) {\r\n      return anime.date.valueOf() >= now;\r\n    });\r\n    // add retrieved data to page\r\n    qq('.queue-wrapper').forEach(function(queueItem) {\r\n      if (qq('.episode-img img', queueItem)[0].src !== COMING_SOON_IMG) {\r\n        return;\r\n      }\r\n      var title = qq('.series-title', queueItem)[0].textContent;\r\n      var episode = findEpByTitle(animeData, title);\r\n      if (episode) {\r\n        insertCountDown(qq('.short-desc', queueItem)[0], episode);\r\n      }\r\n    });\r\n  });\r\n};\r\n\r\nvar user_premium = storeGet('CQRT_user_premium');\r\n\r\nif (user_premium === undefined) {\r\n  user_premium = true;\r\n}\r\n\r\n// register menu command\r\ntypeof GM_registerMenuCommand === 'function' && GM_registerMenuCommand('CR Queue countdown: show schedule for ' + (user_premium ? 'PREMIUM' : 'REGULAR') + ' users', function() {\r\n  storeSet('CQRT_user_premium', !user_premium);\r\n  window.location.reload();\r\n});\r\n\r\n// kick it off\r\nmain(user_premium && PREMIUM || REGULAR);\r\n"],"names":["PREMIUM","REGULAR","COMING_SOON_IMG","SECOND","MINUTE","HOUR","DAY","CURYEAR","Date","getFullYear","qq","q","c","slice","call","document","querySelectorAll","storeGet","key","GM_getValue","value","localStorage","getItem","storeSet","GM_setValue","setItem","storeDel","GM_deleteValue","removeItem","findEpByTitle","shows","title","found","some","show","name","indexOf","getTimes","total","days","Math","floor","hours","minutes","seconds","isDone","toTimeStr","this","insertCountDown","loc","ep","countDown","createElement","last","now","totalTime","date","valueOf","tick","setInterval","times","innerHTML","clearInterval","textContent","appendChild","extractDataFromScript","text","obj","JSON","parse","lastIndexOf","dateStr","getLaunchCalendar","cb","xhr","XMLHttpRequest","open","responseType","onload","send","main","userColor","console","log","evt","target","animeData","response","forEach","script","previousSibling","style","backgroundColor","push","trim","filter","anime","queueItem","src","episode","user_premium","undefined","GM_registerMenuCommand","window","location","reload"],"sourceRoot":""}