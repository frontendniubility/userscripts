{"version":3,"file":"crunchyroll-queue-times.user.js","mappings":"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","sources":["webpack://userscripts/./src/crunchyroll-queue-times/crunchyroll-queue-times.user.js"],"sourcesContent":["// ==UserScript==\r\n// @name        Crunchyroll Queue Real Times\r\n// @namespace   http://www.fuzetsu.com/CRRT\r\n// @version     1.0.4\r\n// @description Display countdown until next episode in the Crunchyroll Queue page\r\n// @match       http://www.crunchyroll.com/home/queue\r\n// @copyright   2014+, fuzetsu\r\n// @deprecated  true\r\n// ==/UserScript==\r\n\r\nvar PREMIUM = 'rgb(255, 251, 223)',\r\n  REGULAR = 'rgb(232, 244, 248)',\r\n  COMING_SOON_IMG = 'http://static.ak.crunchyroll.com/i/coming_soon_beta_wide.jpg';\r\n\r\nvar SECOND = 1000,\r\n  MINUTE = SECOND * 60,\r\n  HOUR = MINUTE * 60,\r\n  DAY = HOUR * 24;\r\n\r\nvar CURYEAR = (new Date()).getFullYear();\r\n\r\nvar qq = function(q, c) {\r\n  return [].slice.call((c || document).querySelectorAll(q));\r\n};\r\n\r\nvar storeGet = function(key) {\r\n  if (typeof GM_getValue === \"undefined\") {\r\n    var value = localStorage.getItem(key);\r\n    if (value === \"true\" || value === \"false\") {\r\n      return (value === \"true\") ? true : false;\r\n    }\r\n    return value;\r\n  }\r\n  return GM_getValue(key);\r\n};\r\n\r\nvar storeSet = function(key, value) {\r\n  if (typeof GM_setValue === \"undefined\") {\r\n    return localStorage.setItem(key, value);\r\n  }\r\n  return GM_setValue(key, value);\r\n};\r\n\r\nvar storeDel = function(key) {\r\n  if (typeof GM_deleteValue === \"undefined\") {\r\n    return localStorage.removeItem(key);\r\n  }\r\n  return GM_deleteValue(key);\r\n};\r\n\r\nvar findEpByTitle = function(shows, title) {\r\n  var found;\r\n  shows.some(function(show) {\r\n    if (show.name.indexOf(title) === 0) {\r\n      found = show;\r\n      return true;\r\n    }\r\n  });\r\n  return found;\r\n};\r\n\r\nvar getTimes = function(total) {\r\n  var days = Math.floor(total / DAY);\r\n  total -= days * DAY;\r\n  var hours = Math.floor(total / HOUR);\r\n  total -= hours * HOUR;\r\n  var minutes = Math.floor(total / MINUTE);\r\n  total -= minutes * MINUTE;\r\n  var seconds = Math.floor(total / SECOND);\r\n  total -= seconds * SECOND;\r\n  return {\r\n    days: days,\r\n    hours: hours,\r\n    minutes: minutes,\r\n    seconds: seconds,\r\n    isDone: function() {\r\n      return days <= 0 && hours <= 0 && minutes <= 0 && seconds <= 0;\r\n    },\r\n    toTimeStr: function() {\r\n      return (this.days > 0 ? this.days + ' days ' : '') + (this.hours > 0 ? this.hours + ' hours ' : '') + (this.minutes > 0 ? this.minutes + ' minutes ' : '') + this.seconds + ' seconds';\r\n    }\r\n  };\r\n};\r\n\r\n// inserts a countdown to the release\r\nvar insertCountDown = function(loc, ep) {\r\n  var countDown = document.createElement('span');\r\n  var last = Date.now();\r\n  var totalTime = ep.date.valueOf() - last;\r\n  var tick = setInterval(function() {\r\n    var times = getTimes(totalTime);\r\n    if (times.isDone()) {\r\n      countDown.innerHTML = '<strong>A new episode has been released! Refresh the page to see it.</strong>';\r\n      return clearInterval(tick);\r\n    }\r\n    countDown.textContent = times.toTimeStr();\r\n    totalTime -= Date.now() - last;\r\n    last = Date.now();\r\n  }, 1000);\r\n  loc.innerHTML = '';\r\n  loc.appendChild(countDown);\r\n};\r\n\r\nvar extractDataFromScript = function(text) {\r\n  var obj = JSON.parse(text.slice(text.indexOf('{'), text.lastIndexOf('}') + 1));\r\n  var dateStr = text.slice(text.lastIndexOf('}') + 4, text.lastIndexOf('\"'));\r\n  obj.date = new Date(dateStr.slice(0, -1) + \" \" + (dateStr.slice(-1) === 'a' ? 'am' : 'pm') + ' ' + CURYEAR);\r\n  return obj;\r\n};\r\n\r\nvar getLaunchCalendar = function(cb) {\r\n  var xhr = new XMLHttpRequest();\r\n  xhr.open('get', '/launchcalendar', true);\r\n  xhr.responseType = 'document';\r\n  xhr.onload = cb;\r\n  xhr.send();\r\n};\r\n\r\nvar main = function(userColor) {\r\n  console.log(userColor);\r\n  getLaunchCalendar(function(evt) {\r\n    var xhr = evt.target;\r\n    var animeData = [];\r\n    qq('td > div > script', xhr.response).forEach(function(script) {\r\n      if (script.previousSibling.previousSibling.style.backgroundColor !== userColor) return;\r\n      animeData.push(extractDataFromScript(script.textContent.trim()));\r\n    });\r\n    // find first date that is before now\r\n    var now = Date.now();\r\n    animeData = animeData.filter(function(anime) {\r\n      return anime.date.valueOf() >= now;\r\n    });\r\n    // add retrieved data to page\r\n    qq('.queue-wrapper').forEach(function(queueItem) {\r\n      if (qq('.episode-img img', queueItem)[0].src !== COMING_SOON_IMG) {\r\n        return;\r\n      }\r\n      var title = qq('.series-title', queueItem)[0].textContent;\r\n      var episode = findEpByTitle(animeData, title);\r\n      if (episode) {\r\n        insertCountDown(qq('.short-desc', queueItem)[0], episode);\r\n      }\r\n    });\r\n  });\r\n};\r\n\r\nvar user_premium = storeGet('CQRT_user_premium');\r\n\r\nif (user_premium === undefined) {\r\n  user_premium = true;\r\n}\r\n\r\n// register menu command\r\ntypeof GM_registerMenuCommand === 'function' && GM_registerMenuCommand('CR Queue countdown: show schedule for ' + (user_premium ? 'PREMIUM' : 'REGULAR') + ' users', function() {\r\n  storeSet('CQRT_user_premium', !user_premium);\r\n  window.location.reload();\r\n});\r\n\r\n// kick it off\r\nmain(user_premium && PREMIUM || REGULAR);\r\n"],"names":["userColor","cb","xhr","HOUR","MINUTE","DAY","CURYEAR","Date","getFullYear","qq","q","c","slice","call","document","querySelectorAll","user_premium","key","GM_getValue","value","localStorage","getItem","storeGet","undefined","GM_registerMenuCommand","GM_setValue","setItem","window","location","reload","console","log","evt","target","animeData","response","forEach","script","text","obj","dateStr","previousSibling","style","backgroundColor","push","textContent","trim","JSON","parse","indexOf","lastIndexOf","date","now","filter","anime","valueOf","queueItem","src","title","episode","shows","found","some","show","name","findEpByTitle","loc","ep","countDown","createElement","last","totalTime","tick","setInterval","times","total","days","Math","floor","hours","minutes","SECOND","seconds","isDone","toTimeStr","this","getTimes","innerHTML","clearInterval","appendChild","XMLHttpRequest","open","responseType","onload","send"],"sourceRoot":""}